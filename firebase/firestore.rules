rules_version = '2';
service cloud.firestore {
	match /databases/{database}/documents {
		match /blog/{id} {
		    allow read: if true;
		    allow write: if isAdmin();
		}

		match /courses/{id} {
			allow read: if isAuthenticated();
			allow write: if isAdmin();
		}

		match /notes/{id} {
			allow read: if isAuthenticated();
			allow write: if isAdmin();
		}

		match /posts/{id} {
			allow read, create: if isAuthenticated();
            allow update, delete: if isMine(resource.data.userId)
		}

		match /sessions/{id} {
			allow read, create: if isAuthenticated();
			allow update: if request.auth.uid == resource.data.tutor || request.auth.uid == resource.data.student;
			allow delete: if isAdmin();
		}

		match /subjects/{id} {
			allow read: if true;
			allow write: if isAdmin();
		}

		match /tests/tutors/questions/{id} {
	        allow read, write: if isAdmin();
	    }

		match /tests/tutors/tests/{id} {
			allow read: if isMine(resource.data.user);
			allow create, update, delete: if isAdmin();
		}

		match /users/{id} {
			allow read, create: if isAuthenticated();
			allow update: if isMine(id);
			allow delete: if isAdmin();
		}

		match /{document=**} {
			allow read, write: if false;
		}

		function isAuthenticated() {
			return request.auth != null;
		}

		function isAdmin() {
			return request.auth.token.isAdmin == true;
		}

		function isMine(id) {
			return request.auth.uid == id;
		}
	}
}
